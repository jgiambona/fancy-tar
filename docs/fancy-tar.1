.TH FANCY-TAR 1 "March 2025" "fancy-tar 1.4.0" "User Commands"
.SH NAME
fancy-tar \- smart archive tool with ZIP, TAR, 7z compression, encryption, and hashing
.SH SYNOPSIS
.B fancy-tar
[\fIoptions\fR] \fIfile1\fR [file2 ...]
.SH DESCRIPTION
\fBfancy-tar\fR is a Bash tool for creating `.tar.gz`, `.zip`, or `.7z` archives with optional encryption, SHA256 hashing, and file tree previews.

.SH OPTIONS
.TP
.B \-o \fIFILE\fR
Specify output archive filename
.TP
.B \-n
Disable gzip compression (outputs .tar)
.TP
.B \-s
Enable slow-mode (simulated)
.TP
.B \-x
Open output folder on completion
.TP
.B \-t, \--tree
Preview files in tree format
.TP
.B \--no-recursion
Only archive top-level files
.TP
.B \--hash
Generate a .sha256 checksum
.TP
.B \--zip
Create a .zip archive (classic password encryption)
.TP
.B \--encrypt=\fImethod\fR
Encrypt using one of: gpg, openssl, 7z
.TP
.B \--recipient \fIid\fR
Specify recipient for GPG encryption
.TP
.B \--password \fIpass\fR
Password for encryption (prompts if omitted)
.TP
.B \--version
Show version and exit
.TP
.B \-h, \--help
Display help

.SH SECURITY
ZIP encryption is weak and should be avoided for sensitive files. Use `--encrypt=gpg`, `--encrypt=openssl`, or `--encrypt=7z` for strong encryption.

.SH EXAMPLES
Create encrypted archive with 7z:
.B
fancy-tar myfolder --encrypt=7z --password

.SH VERSION
fancy-tar 1.4.0
