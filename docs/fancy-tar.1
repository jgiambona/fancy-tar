.TH FANCY-TAR 1 "2024-04-30" "1.7.5" "fancy-tar 1.7.5"
.SH NAME
fancy-tar, fancytar, ftar \- A modern, feature-rich tar wrapper with progress bars and encryption
.SH SYNOPSIS
.B fancy-tar
.RI [ options ]
.RI < files... >
.br
.B fancytar
.RI [ options ]
.RI < files... >
.br
.B ftar
.RI [ options ]
.RI < files... >
.SH DESCRIPTION
.B fancy-tar
is a modern wrapper around GNU tar that adds progress bars, encryption, and parallel compression support. It automatically uses parallel compression tools when available to speed up compression operations.
.SH COMPRESSION
The tool supports multiple compression methods and automatically uses parallel versions when available:
.TP
.B gzip
Default compression method. Uses pigz when available for parallel compression.
.TP
.B bzip2
Uses pbzip2 when available for parallel compression.
.TP
.B xz
Uses pxz when available for parallel compression.
.TP
.B 7z
Uses built-in parallel compression.
.TP
.B ZIP
Uses standard ZIP compression.
.SH ENCRYPTION
The tool supports multiple encryption methods:
.TP
.B GPG
Uses GPG for encryption. Output files will have a .gpg extension.
.TP
.B OpenSSL
Uses OpenSSL for encryption. Output files will have a .enc extension.
.TP
.B 7z
Uses built-in AES-256 encryption when a password is provided.
.SH OPTIONS
.TP
.B \-o, \-\-output <file>
Specify output file name
.TP
.B \-n
Create uncompressed tar archive
.TP
.B \-s
Use slower but better compression
.TP
.B \-x, \-\-open-after
Open the output folder when done (supported on macOS and Linux)
.TP
.B \-t, \-\-tree
Show hierarchical file structure before archiving
.TP
.B \-\-no\-recurse
Do not include directory contents (shallow archive)
.TP
.B \-\-hash
Output SHA256 hash file alongside the archive
.TP
.B \-\-encrypt[=method]
Encrypt archive with gpg (default) or openssl
.TP
.B \-\-recipient <id>
Recipient ID for GPG public key encryption
.TP
.B \-\-password <pass>
Password to use for encryption (if supported)
.TP
.B \-\-verify
Verify the archive after creation
.TP
.B \-\-split\-size=<size>
Split the archive into smaller parts (e.g., 100M, 1G)
.TP
.B \-\-zip
Create a .zip archive (with optional password)
.TP
.B \-\-7z
Create a .7z archive (with optional password)
.TP
.B \-\-compression=<0-9>
Set compression level (0=store, 9=ultra)
.TP
.B \-\-use=<tool>
Force specific compression tool (gzip, bzip2, xz, etc.)
.TP
.B \-\-print\-filename
Output only the final archive filename (useful for scripting)
.SH PROGRESS REPORTING
The tool shows detailed progress information including:
.IP \(bu 2
Total file count and size
.IP \(bu 2
Current progress with percentage
.IP \(bu 2
Transfer speed
.IP \(bu 2
Estimated time remaining
.IP \(bu 2
Final compression ratio
.SH SECURITY
GPG and OpenSSL provide strong encryption. ZIP password protection is insecure and should not be used for sensitive files. 7z archives use AES-256 encryption when a password is provided.
.SH EXAMPLES
.TP
Create and verify a split archive:
.B
fancy-tar folder --split-size=100M --verify -o archive.tar.gz
.TP
Create a 7z archive with high compression:
.B
fancy-tar folder --7z --compression=9 -o archive.7z
.TP
Encrypt using GPG (symmetric):
.B
fancy-tar folder --encrypt=gpg
.TP
Encrypt with OpenSSL:
.B
fancy-tar folder --encrypt=openssl --password secret
.TP
ZIP archive with password:
.B
fancy-tar folder --zip --password secret
.SH VERSION
fancy-tar 1.7.5
.SH SEE ALSO
.BR tar (1),
.BR gzip (1),
.BR bzip2 (1),
.BR xz (1),
.BR pigz (1),
.BR pbzip2 (1),
.BR pxz (1),
.BR 7z (1),
.BR zip (1)
.SH AUTHOR
Written by Jason Giambona <jason.giambona@gmail.com>
.SH COPYRIGHT
Copyright Â© 2024 Jason Giambona
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
